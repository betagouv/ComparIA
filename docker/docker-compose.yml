services:
  backend:
    env_file: .env
    environment:
      LOGDIR: /data
      # LANGUIA_CONTROLLER_URL: "http://languia-controller:21001"
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/languia"
      COMPARIA_REDIS_HOST: redis
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    image: languia:latest
    user: "app"
    ports:
      - "8001:80"
    volumes:
      - ../data:/data
      # Dev config - mount everything except .venv
      - ../:/app
      - /app/.venv  # Exclude .venv from host mount (use container's .venv)
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "80", "--reload"]
    # depends_on:
    #   - postgres

  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile-sveltekit
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    user: "app"
    # For runtime access in +page.server.ts via same hostname
    network_mode: host
    depends_on:
      - backend
    environment:
      PUBLIC_API_URL: "http://127.0.0.1:8001"
    # ports:
    # - 3000:3000
    # Dev config
    volumes:
      - ../frontend:/app
      - /app/node_modules  # Exclude node_modules from host mount
    command: ["npx", "vite", "dev", "--host", "--port", "3000"]
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: languia
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./data/file.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
  redis:
    image: redis
    ports:
      - "6379:6379"
volumes:
  db-data:

